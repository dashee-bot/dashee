
# A simple valid key
key=value

# A key and value with a space in the seperator
#
# This should be valid
space_key = value

# This is valid, and trailing spaces should be ignored
 leading_space_key1=should work
  leading_space_key2=why

# Double quotes key's test weather
# 
# Values inside quotes should be stored as strings without the
# leading and trailing quotes.
#
# Missing leading or trailing quotes makes the value invalid
#  @ _missing_lead
#  @ _missing_trail
#
# Too many quotes should disregard anything after the first break of quotes.
# so the value "va"lue, "va"lue" or "va"lu"e" should all have the actual value
# of "va"
#  @ _toomany1=va
#  @ _toomany2=va
#  @ _toomany3=va
#
# When a quote needs to be added it needs to be escaped so we test escaping with
# quotes without quotes and test the values should be
#  @ _escape1=va"lu"e
#  @ _escape2=value
#  @ _escape3=va\lue
#
double_quote_string="value"
double_quote_string_space= "value"   
double_quote_missing_lead="value
double_quote_missing_trail1=value"
double_quote_missing_trail2=value"ladies"
double_quote_and_single_quote="lad'i'es"
double_quote_toomany1="va"lue
double_quote_toomany2="va"lue"
double_quote_toomany3="va"lu"e"
double_quote_escape1="va\"lu\"e"
double_quote_escape2="va\lue"
double_quote_escape3="va\\lue"
double_quote_escape4="value\"

# Sam as Double quotes but for single quotes
single_quote_string='value'
single_quote_string_space= 'value'
single_quote_missing_lead='value
single_quote_missing_trail1=value'
single_quote_missing_trail2=value'ladies'
single_quote_and_double_quote='lad"i"es'
single_quote_toomany1='va'lue
single_quote_toomany2='va'lue'
single_quote_toomany3='va'lu'e'
single_quote_escape1='va\'lu\'e'
single_quote_escape2='va\lue'
single_quote_escape3='va\\lue'
single_quote_escape4='value\'

# Escaping
escape1=va\
lue
escape2=va\\
escape3=va\\lue

#Mismatching quotes
quotes_mismatches_double="val'ue"
quotes_mismatches_single='val"ue'

# Handle oversize values that the config handler will not deal with
#
# @big_value is on the limit and should work
# @big_value with quotes is in limit inside its quotes but not with quotes
# @big_value_overlimit should be ignored
# @big_value_overlimit_with_quotes should also be ignored
big_value=hello to the world of tomorrow topguns!
big_value_with_quotes='hello to the world of tomorrow topguns!'
big_value_overlimit=big_value=hello to the world of tomorrow topgunners, lets get ready to rumble! Na na na na na an an ana na a Batman
big_value_overlimit_with_quotes='hello to the world of tomorrow topgunners, lets get ready to rumble! Na na na na na na nana na Batman'

# Handle

# Check to see weather the key was overwritten
overwritten=first
overwritten=second

# Test numbers weather they are set to positive, negative or overflown
number1=0
number2=-0
number3=123
number4=-123
number5=2357111317192329313741434753596167717379838997

# Test decimals weather they are set to positive, negative or overflown
pi1=3.141592653589
pi2=-3.141592653589
pi3=3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679
pi4=-3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679

# invalid keys characters
#
# Keys must start with A-Za-z and end with 0-9A-Za-z
# Keys must have a value and not empty
1234='keys must start with A-Za-z'
-key='keys must start with non A-Za-z'
key-='keys must not end with -'
key_no_equalsign
invalid key with space=hello
big_keybig_key_toobigtoobigtoobigtoobigtoobigendendend=cant handle this
key_no_value=
double--dash='notvalid'
double__underscore='notvalid'
double_-mix='notvalid'


# Really crazy valid values,
#
# The first key should only contain the string up to the end single quote
# The second should contain the whole as a string, but trimmed on both sides
 really-crazy_VALID-value1    = 'This is my " value so dont bother'               space space
 really-crazy_VALID-value2    = This is my non quoted " value so    dont bother \
